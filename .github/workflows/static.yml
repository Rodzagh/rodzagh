name: Build KivyMD APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
            zip unzip openjdk-17-jdk \
            git autoconf libtool pkg-config \
            zlib1g-dev libncurses-dev \
            libtinfo6 cmake libffi-dev \
            libssl-dev python3-dev

    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      with:
        ndk-version: '25.2.9519653'
        cmake-version: '3.22.1'

    - name: Accept licenses and install packages
      run: |
        yes | sdkmanager --licenses
        sdkmanager "platform-tools" "build-tools;34.0.0" "platforms;android-33"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install --no-cache-dir "cython<3.0" "buildozer>=1.5.0" "python-for-android==2024.1.21"
        pip cache purge

    - name: Initialize Buildozer environment
      run: |
        buildozer init || true
        # Get the actual python-for-android installation path
        P4A_PATH=$(python -c "import os, pythonforandroid; print(os.path.dirname(pythonforandroid.__file__))")
        # Create the directory structure Buildozer expects
        mkdir -p ~/.buildozer/android/platform
        # Copy the entire python-for-android package to where Buildozer expects it
        cp -r $P4A_PATH ~/.buildozer/android/platform/python-for-android
        # Verify the copy worked
        ls -la ~/.buildozer/android/platform/python-for-android

    - name: Configure buildozer.spec
      run: |
        cat > buildozer.spec <<EOL
        [app]
        title = MyApp
        package.name = myapp
        package.domain = org.mydomain
        source.dir = .
        source.include_exts = py,png,jpg,kv,ttf,json
        version = 0.1
        requirements = python3==3.9,kivy==2.1.0,kivymd==1.1.1,openssl,sqlite3,pillow
        android.archs = arm64-v8a
        android.ndk_path = $ANDROID_HOME/ndk/25.2.9519653
        android.sdk_dir = $ANDROID_HOME
        android.min_sdk_version = 21
        android.target_sdk_version = 33
        presplash.filename = %(source.dir)s/assets/icon.png
        icon.filename = %(source.dir)s/assets/icon.png
        EOL

    - name: Build APK with retries
      run: |
        set +e
        for i in {1..3}; do
          echo "Attempt $i/3"
          buildozer android clean
          buildozer -v android debug 2>&1 | tee build.log
          if [ -f bin/*.apk ]; then
            echo "APK built successfully"
            mkdir -p dist
            find bin -name '*.apk' -exec cp {} dist/ \;
            break
          else
            echo "Build attempt $i failed, retrying..."
            sleep 5
          fi
        done
        set -e
        # Fail if no APK was built after all attempts
        if [ ! -f dist/*.apk ]; then
          echo "Build failed after 3 attempts"
          exit 1
        fi

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-apk
        path: dist/*.apk
        if-no-files-found: error
        retention-days: 7

    - name: Upload build log
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-log
        path: build.log
        retention-days: 7
