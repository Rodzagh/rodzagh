name: Build KivyMD APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
            zip unzip openjdk-17-jdk \
            git autoconf libtool pkg-config \
            zlib1g-dev libncurses-dev \
            libtinfo6 cmake libffi-dev \
            libssl-dev python3-dev

    - name: Install Android SDK
      run: |
        mkdir -p ~/android-sdk/cmdline-tools
        cd ~/android-sdk
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-*.zip -d cmdline-tools/latest
        rm commandlinetools-linux-*.zip
        mv cmdline-tools/latest/cmdline-tools/* cmdline-tools/latest/
        rm -rf cmdline-tools/latest/cmdline-tools
        echo "export ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest:$ANDROID_HOME/platform-tools" >> $GITHUB_ENV

    - name: Accept licenses and install packages
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/sdkmanager --licenses || true
        $ANDROID_HOME/cmdline-tools/latest/sdkmanager --install "platform-tools" "build-tools;34.0.0" "platforms;android-33"
        $ANDROID_HOME/cmdline-tools/latest/sdkmanager --install "ndk;25.2.9519653"
        echo "export NDK_HOME=$ANDROID_HOME/ndk/25.2.9519653" >> $GITHUB_ENV

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install --no-cache-dir "cython<3.0" "buildozer>=1.5.0"
        pip cache purge

    - name: Configure buildozer.spec
      run: |
        cat > buildozer.spec <<EOL
        [app]
        title = MyApp
        package.name = myapp
        package.domain = org.mydomain
        source.dir = .
        source.include_exts = py,png,jpg,kv,ttf,json
        version = 0.1
        requirements = python3==3.8,kivy==2.1.0,kivymd==1.1.1,openssl,sqlite3,pillow
        android.archs = arm64-v8a
        android.ndk_path = $ANDROID_HOME/ndk/25.2.9519653
        android.sdk_dir = $ANDROID_HOME
        android.min_sdk_version = 21
        android.target_sdk_version = 33
        presplash.filename = %(source.dir)s/assets/icon.png
        icon.filename = %(source.dir)s/assets/icon.png
        EOL

    - name: Build APK
      run: |
        buildozer android clean
        buildozer -v android debug 2>&1 | tee build.log
        mkdir -p dist
        find bin -name '*.apk' -exec cp {} dist/ \;

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-apk
        path: dist/*.apk
        if-no-files-found: error
        retention-days: 7

    - name: Upload build log
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-log
        path: build.log
        retention-days: 7
