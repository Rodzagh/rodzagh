name: Build KivyMD APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
            zip unzip openjdk-17-jdk \
            git autoconf libtool pkg-config \
            zlib1g-dev libncurses-dev \
            libtinfo6 cmake libffi-dev \
            libssl-dev python3-dev

    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      with:
        ndk-version: '25.2.9519653'
        cmake-version: '3.22.1'
        build-tools-version: '34.0.0'
        platform-version: '33'
        disable-confirmation: true

    - name: Configure Android environment
      run: |
        # Accept all licenses
        mkdir -p "$ANDROID_HOME/licenses"
        echo -e "\n24333f8a63b6825ea9c5514f83c2829b004d1fee" > "$ANDROID_HOME/licenses/android-sdk-license"
        echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
        
        # Install exact versions
        yes | sdkmanager --install "platform-tools" "build-tools;34.0.0" "platforms;android-33" "cmdline-tools;latest"
        
        # Verify AIDL is working
        $ANDROID_HOME/build-tools/34.0.0/aidl --version
        
        # Set environment variables
        echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=$ANDROID_HOME/ndk/25.2.9519653" >> $GITHUB_ENV
        echo "PATH=$ANDROID_HOME/build-tools/34.0.0:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install --no-cache-dir \
            "cython<3.0" \
            "buildozer>=1.5.0" \
            "python-for-android==2024.1.21" \
            "kivy==2.2.1" \
            "kivymd==1.2.0"

    - name: Initialize Buildozer
      run: |
        buildozer init || true
        # Fix python-for-android location
        P4A_PATH=$(python -c "import os, pythonforandroid; print(os.path.dirname(pythonforandroid.__file__))")
        mkdir -p ~/.buildozer/android/platform
        ln -sfn $P4A_PATH ~/.buildozer/android/platform/python-for-android

    - name: Configure buildozer.spec
      run: |
        cat > buildozer.spec <<EOL
        [app]
        title = MyApp
        package.name = myapp
        package.domain = org.mydomain
        source.dir = .
        source.include_exts = py,png,jpg,kv,ttf,json
        version = 0.1
        requirements = python3==3.10,kivy==2.2.1,kivymd==1.2.0,openssl,sqlite3,pillow
        android.archs = arm64-v8a
        android.ndk_path = $ANDROID_HOME/ndk/25.2.9519653
        android.sdk_dir = $ANDROID_HOME
        android.build_tools_dir = $ANDROID_HOME/build-tools/34.0.0
        android.platform_dir = $ANDROID_HOME/platforms/android-33
        android.min_sdk_version = 21
        android.target_sdk_version = 33
        presplash.filename = %(source.dir)s/assets/icon.png
        icon.filename = %(source.dir)s/assets/icon.png
        EOL

    - name: Build APK
      run: |
        # Clean previous builds
        buildozer android clean
        
        # Run build with full logging
        buildozer -v android debug 2>&1 | tee build.log
        
        # Verify APK was created
        mkdir -p dist
        if ls bin/*.apk 1> /dev/null 2>&1; then
          echo "APK built successfully!"
          cp bin/*.apk dist/
        else
          echo "APK build failed!"
          echo "=== Build Log Tail ==="
          tail -n 100 build.log
          exit 1
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: app-artifacts
        path: |
          dist/*.apk
          build.log
        if-no-files-found: error
        retention-days: 7
